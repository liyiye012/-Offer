class Solution {
public:
    void PrintMatrixInCircle(vector<vector<int>> matrix,int columns,int rows,int start,vector<int> &res){
        int endX=columns-start-1;
        int endY=rows-start-1;
        for(int i=start;i<=endX;i++) {
            res.push_back(matrix[start][i]);
        }
        if(start<endY){
            for(int i=start+1;i<=endY;i++){
                res.push_back(matrix[i][endX]);
            }
        }
        if(start<endX && start<endY){
            for(int i=endX-1;i>=start;i--){
                res.push_back(matrix[endY][i]);
            }
        }
        if(start<endX && start<endY-1){
            for(int i=endY-1;i>start;i--){
                res.push_back(matrix[i][start]);
            }
        }
    }
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int rows=matrix.size();
        int columns=matrix[0].size();
        vector<int> res;
        int start=0;
        while(columns>start*2 && rows>start*2){
            PrintMatrixInCircle(matrix,columns,rows,start,res);
            start++;
        }
        return res;
    }
};
